diff --git a/node_modules/@dcloudio/uni-h5/dist/uni-h5.cjs.js b/node_modules/@dcloudio/uni-h5/dist/uni-h5.cjs.js
index 82b9447..3fbb8ae 100644
--- a/node_modules/@dcloudio/uni-h5/dist/uni-h5.cjs.js
+++ b/node_modules/@dcloudio/uni-h5/dist/uni-h5.cjs.js
@@ -4393,11 +4393,13 @@ function useMovableViewTransform(rootRef, props2, _scaleOffset, _scale, maxX, ma
       });
     }
     let transform = "translateX(" + x + "px) translateY(" + y + "px) translateZ(0px) scale(" + scale + ")";
-    rootRef.value.style.transform = transform;
-    rootRef.value.style.webkitTransform = transform;
-    _translateX.value = x;
-    _translateY.value = y;
-    _scale.value = scale;
+    if (rootRef.value) {
+      rootRef.value.style.transform = transform;
+      rootRef.value.style.webkitTransform = transform;
+      _translateX.value = x;
+      _translateY.value = y;
+      _scale.value = scale;
+    }
   }
   function _revise(source) {
     let limitXY = _getLimitXY(_translateX.value, _translateY.value);
diff --git a/node_modules/@dcloudio/uni-h5/dist/uni-h5.es.js b/node_modules/@dcloudio/uni-h5/dist/uni-h5.es.js
index cc0c6e5..831d605 100644
--- a/node_modules/@dcloudio/uni-h5/dist/uni-h5.es.js
+++ b/node_modules/@dcloudio/uni-h5/dist/uni-h5.es.js
@@ -5744,7 +5744,7 @@ const StartLocationUpdateOptions = {
     type(value, params) {
       value = (value || "").toLowerCase();
       if (coordTypes.indexOf(value) === -1) {
-        params.type = coordTypes[0];
+        params.type = coordTypes[1];
       } else {
         params.type = value;
       }
@@ -10649,11 +10649,13 @@ function useMovableViewTransform(rootRef, props2, _scaleOffset, _scale, maxX, ma
       });
     }
     let transform = "translateX(" + x + "px) translateY(" + y + "px) translateZ(0px) scale(" + scale + ")";
-    rootRef.value.style.transform = transform;
-    rootRef.value.style.webkitTransform = transform;
-    _translateX.value = x;
-    _translateY.value = y;
-    _scale.value = scale;
+    if (rootRef.value) {
+      rootRef.value.style.transform = transform;
+      rootRef.value.style.webkitTransform = transform;
+      _translateX.value = x;
+      _translateY.value = y;
+      _scale.value = scale;
+    }
   }
   function _revise(source) {
     let limitXY = _getLimitXY(_translateX.value, _translateY.value);
@@ -16591,13 +16593,16 @@ function translateGeo(type, coords, skip) {
         },
         (res) => {
           if ("detail" in res && "points" in res.detail && res.detail.points.length) {
-            const location2 = res.detail.points[0];
-            resolve(
-              extend({}, coords, {
-                longitude: location2.lng,
-                latitude: location2.lat
-              })
-            );
+            const { lng, lat } = res.detail.points[0];
+            resolve({
+              longitude: lng,
+              latitude: lat,
+              altitude: coords.altitude,
+              accuracy: coords.accuracy,
+              altitudeAccuracy: coords.altitudeAccuracy,
+              heading: coords.heading,
+              speed: coords.speed
+            });
           } else {
             resolve(coords);
           }
@@ -16615,12 +16620,15 @@ function translateGeo(type, coords, skip) {
           (_, res) => {
             if (res.info === "ok" && res.locations.length) {
               const { lat, lng } = res.locations[0];
-              resolve(
-                extend({}, coords, {
-                  longitude: lng,
-                  latitude: lat
-                })
-              );
+              resolve({
+                longitude: lng,
+                latitude: lat,
+                altitude: coords.altitude,
+                accuracy: coords.accuracy,
+                altitudeAccuracy: coords.altitudeAccuracy,
+                heading: coords.heading,
+                speed: coords.speed
+              });
             } else {
               resolve(coords);
             }
@@ -18996,7 +19004,7 @@ const ImagePreview = /* @__PURE__ */ defineSystemComponent({
       position: "absolute",
       "box-sizing": "border-box",
       top: "0",
-      left: "0",
+      right: "0",
       width: "60px",
       height: "44px",
       padding: "6px",
@@ -20288,54 +20296,65 @@ const chooseLocation = /* @__PURE__ */ defineAsyncApi(
   },
   ChooseLocationProtocol
 );
+let started = false;
 let watchId = 0;
 const startLocationUpdate = /* @__PURE__ */ defineAsyncApi(
   API_START_LOCATION_UPDATE,
-  (_, { resolve, reject }) => {
-    if (navigator.geolocation && watchId === 0) {
-      watchId = navigator.geolocation.watchPosition(
-        (res) => {
-          translateGeo(_ == null ? void 0 : _.type, res.coords).then((coords) => {
-            UniServiceJSBridge.invokeOnCallback(
-              API_ON_LOCATION_CHANGE,
-              coords
-            );
-            resolve();
-          }).catch((error) => {
-            reject(error.message);
-          });
-        },
-        (error) => {
+  (options, { resolve, reject }) => {
+    if (!navigator.geolocation) {
+      reject();
+      return;
+    }
+    watchId = watchId || navigator.geolocation.watchPosition(
+      (res) => {
+        started = true;
+        translateGeo(options == null ? void 0 : options.type, res.coords).then((coords) => {
+          UniServiceJSBridge.invokeOnCallback(
+            API_ON_LOCATION_CHANGE,
+            coords
+          );
+          resolve();
+        }).catch((error) => {
+          UniServiceJSBridge.invokeOnCallback(
+            API_ON_LOCATION_CHANGE_ERROR,
+            { errMsg: `onLocationChange:fail ${error.message}` }
+          );
+        });
+      },
+      (error) => {
+        if (!started) {
           reject(error.message);
+          started = true;
         }
-      );
-    }
-    resolve();
+        UniServiceJSBridge.invokeOnCallback(API_ON_LOCATION_CHANGE_ERROR, {
+          errMsg: `onLocationChange:fail ${error.message}`
+        });
+      }
+    );
+    setTimeout(resolve, 100);
   },
   StartLocationUpdateProtocol,
   StartLocationUpdateOptions
 );
-const onLocationChange = /* @__PURE__ */ defineOnApi(
-  API_ON_LOCATION_CHANGE,
-  () => {
-  }
-);
 const stopLocationUpdate = /* @__PURE__ */ defineAsyncApi(
   API_STOP_LOCATION_UPDATE,
-  (_, { resolve, reject }) => {
+  (_, { resolve }) => {
     if (watchId) {
       navigator.geolocation.clearWatch(watchId);
+      started = false;
       watchId = 0;
-      resolve();
-    } else {
-      reject("stopLocationUpdate:fail");
     }
+    resolve();
+  }
+);
+const onLocationChange = /* @__PURE__ */ defineOnApi(
+  API_ON_LOCATION_CHANGE,
+  () => {
   }
 );
 const offLocationChange = /* @__PURE__ */ defineOffApi(
   API_OFF_LOCATION_CHANGE,
   () => {
-    stopLocationUpdate();
   }
 );
 const onLocationChangeError = /* @__PURE__ */ defineOnApi(
@@ -20343,7 +20362,7 @@ const onLocationChangeError = /* @__PURE__ */ defineOnApi(
   () => {
   }
 );
-const offLocationChangeError = /* @__PURE__ */ defineOnApi(
+const offLocationChangeError = /* @__PURE__ */ defineOffApi(
   API_OFF_LOCATION_CHANGE_ERROR,
   () => {
   }
@@ -22375,8 +22394,8 @@ const api = /* @__PURE__ */ Object.defineProperty({
   openLocation,
   chooseLocation,
   startLocationUpdate,
-  onLocationChange,
   stopLocationUpdate,
+  onLocationChange,
   offLocationChange,
   onLocationChangeError,
   offLocationChangeError,
